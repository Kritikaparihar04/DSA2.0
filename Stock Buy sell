BRUTE

    int maxProfit(vector<int>& prices) {
        
        int max=0;

        for(int i=0;i<prices.size()-1;i++)
        {
            for(int j=i+1;j<prices.size();j++)
            {
                int tem=prices[j]-prices[i];
                 if(tem>max)
                 max=tem;
            }
        }
     return max;
    }


OPTIMAL Approach

    int maxProfit(vector<int>& prices) {
            
    //store our min and profit..... ,min hoga first element
    int min=prices[0];
    int profit=0;

    for(int i=1;i<prices.size();i++)    //poore array m loop lagaege
    {
        if((prices[i]-min)>profit)
        {
            profit=prices[i]-min;     //if profit bdhaa to update
        }
        if(prices[i]<min)
        {
            min=prices[i];           //if current element is minimum to update
        }
        
           
    }      
return profit;                      //return profit.
       

    }
